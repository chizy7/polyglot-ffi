.TH POLYGLOT-FFI-CONFIG 5 "2025-01-22" "v0.4.1" "Polyglot FFI Manual"
.SH NAME
polyglot.toml \- Polyglot FFI configuration file format
.SH SYNOPSIS
.B polyglot.toml
.SH DESCRIPTION
The
.B polyglot.toml
file configures a polyglot FFI project. It is written in TOML format and
contains project metadata, bindings configuration, and target language settings.
.SH FILE LOCATION
The configuration file is typically located at the root of the project:
.EX
project-root/
└── polyglot.toml
.EE
.PP
Alternative locations can be specified using the --config option or the
POLYGLOT_FFI_CONFIG environment variable.
.SH FILE FORMAT
.SS [project] Section
Project metadata and global settings.
.TP
.B name = "string"
Project name (required)
.TP
.B version = "string"
Project version (semantic versioning recommended)
.TP
.B description = "string"
Brief project description
.TP
.B authors = ["string"]
List of project authors
.SS [bindings] Section
Bindings generation configuration.
.TP
.B source_dir = "path"
Directory containing source .mli files. Default: "src"
.TP
.B output_dir = "path"
Directory for generated bindings. Default: "generated"
.TP
.B source_files = ["path"]
List of .mli files to process. Glob patterns supported.
.TP
.B auto_discover = boolean
Automatically discover .mli files in source_dir. Default: true
.SS [targets.LANGUAGE] Sections
Per-target-language configuration. Replace LANGUAGE with python, rust, or go.
.TP
.B enabled = boolean
Enable/disable this target. Default: true
.TP
.B output_dir = "path"
Language-specific output directory (overrides global output_dir)
.TP
.B module_prefix = "string"
Prefix for generated module names
.TP
.B type_hints = boolean
Generate type hints (Python only). Default: true
.TP
.B generate_tests = boolean
Generate test stubs. Default: false
.SS [types] Section
Custom type mappings (optional).
.EX
[types.custom_type_name]
ocaml = "ocaml_type"
python = "PythonType"
rust = "RustType"
c = "c_type_t"
.EE
.SH EXAMPLE
.EX
[project]
name = "crypto-bindings"
version = "0.1.0"
description = "FFI bindings for crypto library"
authors = ["Jane Developer <jane@example.com>"]

[bindings]
source_dir = "src"
output_dir = "generated"
source_files = ["src/crypto.mli", "src/hash.mli"]
auto_discover = false

[targets.python]
enabled = true
output_dir = "generated/python"
type_hints = true
module_prefix = "crypto"

[targets.rust]
enabled = true
output_dir = "generated/rust"

[types.binary_data]
ocaml = "bytes"
python = "bytes"
rust = "Vec<u8>"
c = "uint8_t*"
.EE
.SH VALIDATION
Configuration is validated when:
.IP \(bu 2
Running \fBpolyglot-ffi check\fR
.IP \(bu 2
Starting any generation command
.IP \(bu 2
Using \fBpolyglot-ffi watch\fR
.PP
Validation checks:
.IP \(bu 2
TOML syntax is correct
.IP \(bu 2
Required fields are present
.IP \(bu 2
Source files exist
.IP \(bu 2
Output directories are writable
.IP \(bu 2
Type mappings are complete
.SH ENVIRONMENT
.TP
.B POLYGLOT_FFI_CONFIG
Override default config file location
.EX
export POLYGLOT_FFI_CONFIG=/path/to/custom.toml
.EE
.TP
.B POLYGLOT_FFI_OUTPUT
Override output directory
.EX
export POLYGLOT_FFI_OUTPUT=/tmp/bindings
.EE
.SH FILES
.TP
.B polyglot.toml
Default configuration file location
.TP
.B .polyglot/
Directory for cached data and metadata
.SH NOTES
.SS Best Practices
.IP \(bu 2
Keep configuration under version control
.IP \(bu 2
Use semantic versioning for project.version
.IP \(bu 2
Enable auto_discover for simple projects
.IP \(bu 2
Explicitly list source_files for complex projects
.IP \(bu 2
Use custom type mappings sparingly
.SS Common Patterns
.IP \(bu 2
Multiple source files: Use source_files array or auto_discover
.IP \(bu 2
Multiple targets: Enable multiple [targets.LANG] sections
.IP \(bu 2
Custom output structure: Set per-target output_dir
.IP \(bu 2
Type extensions: Define custom types in [types] section
.SH SEE ALSO
.BR polyglot-ffi (1),
.BR polyglot-ffi-init (1),
.BR polyglot-ffi-check (1),
.BR toml (5)
.SH STANDARDS
Configuration uses TOML v1.0.0 specification.
.br
See https://toml.io for TOML documentation.
